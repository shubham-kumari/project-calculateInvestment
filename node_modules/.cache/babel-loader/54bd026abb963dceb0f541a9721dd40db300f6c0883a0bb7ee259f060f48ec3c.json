{"ast":null,"code":"var _jsxFileName = \"/Users/shubhamkumari/Downloads/01-starting-project 3/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Form from './components/Form';\nimport Header from './components/header';\nimport Result from './components/Result';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [results, setResults] = useState(null)\n  const [userInput, setUserInput] = useState(null);\n  const calculateHandler = userInput => {\n    setUserInput(userInput);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    // do something with yearlyData ...\n    // setResults(yearlyData);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onCalculate: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Result, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Form","Header","Result","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userInput","setUserInput","calculateHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","onCalculate","_c","$RefreshReg$"],"sources":["/Users/shubhamkumari/Downloads/01-starting-project 3/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport Form from './components/Form';\nimport Header from './components/header';\nimport Result from './components/Result';\n\n\n\nfunction App() {\n  // const [results, setResults] = useState(null)\n  const [userInput, setUserInput] = useState(null)\n  \n  const calculateHandler = (userInput) => {\n    setUserInput(userInput);\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    \n\n    // do something with yearlyData ...\n    // setResults(yearlyData);\n  };\n\n  \n\n  return (\n    <>\n      <Header/>\n\n      <Form onCalculate={calculateHandler}/>\n\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n\n      <Result/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEhD,MAAMY,gBAAgB,GAAIF,SAAS,IAAK;IACtCC,YAAY,CAACD,SAAS,CAAC;IACvB;IACA;;IAIA;IACA;EACF,CAAC;EAID,oBACEL,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACH,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAETZ,OAAA,CAACJ,IAAI;MAACiB,WAAW,EAAEN;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAKtCZ,OAAA,CAACF,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACT,CAAC;AAEP;AAACR,EAAA,CA7BQD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}